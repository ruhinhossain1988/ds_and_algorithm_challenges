[Scia Reto](https://sciareto.org) mind map   
> __version__=`1.1`,showJumps=`true`
---

# Walkthrough\(kthGrammar\)
> mmd.emoticon=`tree`


## Step 1: n = 4, k = 5<br/><br/>length = 2^\(4\-1\) = 8<br/>mid = length / 2 = 4<br/>k = 5 is in the right half \(k \> mid\)\.<br/>Recur into kthGrammar\(3, k \- mid\) → kthGrammar\(3, 1\) and invert the result\.

## Step 2: n = 3, k = 1<br/><br/>length = 2^\(3\-1\) = 4<br/>mid = length / 2 = 2<br/>k = 1 is in the left half \(k \<= mid\)\.<br/>Recur into kthGrammar\(2, k\) → kthGrammar\(2, 1\)\.
> leftSide=`true`


## Step 3: n = 2, k = 1<br/><br/>length = 2^\(2\-1\) = 2<br/>mid = length / 2 = 1<br/>k = 1 is in the left half \(k \<= mid\)\.<br/>Recur into kthGrammar\(1, k\) → kthGrammar\(1, 1\)\.
> leftSide=`true`


## Step 4: n = 1, k = 1<br/><br/>Base case: n === 1\. Return 0\.

## Backtracking and Combining Results<br/>Step 4 to Step 3:<br/>kthGrammar\(2, 1\) → 0\.<br/>Step 3 to Step 2:<br/><br/>kthGrammar\(3, 1\) → 0\.<br/>Step 2 to Step 1:<br/><br/>kthGrammar\(4, 5\) → 1 \- 0 = 1\.
> leftSide=`true`


## Key Insights:<br/>Recursive Structure of Rows:<br/>Left half of the row is identical to the previous row\.<br/>Right half is the complement of the left half\.<br/>Divide\-and\-Conquer Approach:<br/>Use the mid value to decide whether to search in the left or right half\.<br/>Efficient Solution:<br/>Avoids building the entire row explicitly, reducing time complexity to O\(n\)
